log:
  level: INFO

entryPoints:
  web:
    # http
    address: ':80'
    http:
      # https://doc.traefik.io/traefik/routing/entrypoints/#entrypoint
      redirections:
        entryPoint:
          to: web-secure

  web-secure:
    # https
    address: ':443'


certificatesResolvers:
  letsencrypt:
    # https://doc.traefik.io/traefik/https/acme/#lets-encrypt
    acme:
      email: 'adnankaya@example.com' # edit this for your email
      storage: /etc/traefik/acme/acme.json
      # https://doc.traefik.io/traefik/https/acme/#httpchallenge
      httpChallenge:
        entryPoint: web

http:
  routers:
    app1-router:
      rule: 'Host(`app1.com`) || Host(`www.app1.com`)'
      entryPoints:
        - web-secure
      middlewares:
        - csrf
      service: app1 # traefik.yml services.app1, see below
      tls:
        # https://doc.traefik.io/traefik/routing/routers/#certresolver
        certResolver: letsencrypt
    
    app2-router:
      rule: 'Host(`app2.com`) || Host(`www.app2.com`)'
      entryPoints:
        - web-secure
      middlewares:
        - csrf
      service: app2 # traefik.yml services.app2, see below
      tls:
        # https://doc.traefik.io/traefik/routing/routers/#certresolver
        certResolver: letsencrypt

  middlewares:
    csrf:
      # https://doc.traefik.io/traefik/master/middlewares/http/headers/#hostsproxyheaders
      # https://docs.djangoproject.com/en/dev/ref/csrf/#ajax
      headers:
        hostsProxyHeaders: ['X-CSRFToken']

  services:
    app1:
      loadBalancer:
        servers:
          - url: http://app1_django:8001 # service name in app1/docker-compose.production.yml
    app2:
      loadBalancer:
        servers:
          - url: http://app2_flask:8002 # service name in app2/docker-compose.production.yml

providers:
  # https://doc.traefik.io/traefik/master/providers/file/
  file:
    filename: /etc/traefik/traefik.yml
    watch: true
